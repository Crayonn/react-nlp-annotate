{"version":3,"sources":["components/Theme/index.js","components/DemoSite/Editor.js","string-to-sequence.js","components/Document/index.js","components/LabelButton/index.js","components/LabelSelector/index.js","merge-sequence.js","colors.js","components/SequenceAnnotator/index.js","components/DocumentLabeler/index.js","components/EditableDocument/index.js","components/Transcriber/index.js","components/Container/index.js","components/NLPAnnotator/index.js","components/DemoSite/ErrorBoundaryDialog.js","components/DemoSite/index.js","components/DatasetViewer/index.js","index.js"],"names":["useStyles","makeStyles","container","fontFamily","theme","createMuiTheme","typography","overrides","MuiButton","root","textTransform","editBar","padding","borderBottom","backgroundColor","display","alignItems","& .button","margin","select","width","fontSize","contentArea","specificationArea","loadSavedInput","JSON","parse","window","localStorage","getItem","e","examples","SimpleLabelSequence","type","document","labels","id","displayName","SimpleLabelDocument","Custom","Editor","_ref","initialAnnotatorProps","onOpenAnnotator","lastOutput","c","_useState","useState","_useState2","Object","slicedToArray","currentError","changeCurrentError","_useState3","_useState4","selectedExample","changeSelectedExample","_useState5","_useState6","outputDialogOpen","changeOutputOpen","_useState7","stringify","_useState8","currentJSONValue","changeCurrentJSONValue","react_default","a","createElement","className","style","flexGrow","react_select_esm","value","label","options","keys","map","s","onChange","selectedOption","Button_default","disabled","onClick","variant","Boolean","border","lib_default","language","code","setItem","toString","height","default_highlight","Dialog_default","fullScreen","open","DialogTitle_default","DialogContent_default","minWidth","DialogActions_default","stringToSequence","doc","m","sepRe","indices","exec","push","index","length","concat","filter","_","i","text","slice","Document","sequence","_ref$onHighlightedCha","onHighlightedChanged","_ref$onSequenceChange","onSequenceChange","nothingHighlighted","_ref$colorLabelMap","colorLabelMap","mouseDown","changeMouseDown","_useState4$","firstSelected","lastSelected","changeHighlightedRangeState","changeHighlightedRange","_ref2","_ref3","first","last","highlightedItems","Math","min","max","onMouseDown","onMouseUp","seq","Fragment","onMouseMove","color","paddingLeft","paddingRight","borderRadius","userSelect","includes","marginTop","marginBottom","paddingTop","paddingBottom","key","flatMap","cursor","alignSelf","justifyContent","marginLeft","&:hover","opacity","&.small","fontWeight","Label","props","parent","description","small","hasChildren","hotkey","deletable","classes","classnames","FolderOpen_default","marginRight","tooltip","whiteSpace","LabelSelector","onSelectLabel","parents","changeParents","currentParent","undefined","hotkeyLabelMap","r","labelHotkeyMap","letters","toLowerCase","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","err","return","useLayoutEffect","eventFunc","labelId","some","l2","findRouteFromParents","find","l","addEventListener","removeEventListener","flexWrap","LabelButton","p","objectSpread","Tooltip_default","title","placement","assign","indexOf","mergeSequence","newSeq","current","reduce","acc","colors","SequenceAnnotator","changeHighlightedItems","initialSequence","changeSequence","useMemo","buildText","newSequence","itemIndex","item","borderTop","DocumentLabeler","initialLabels","initialLabel","selectedLabels","changeSelectedLabels","multipleLabels","newSelectedLabels","spellChecker","Spelling","enDictionary","components","createOption","random","colourStyles","control","styles","option","data","isDisabled","isFocused","isSelected","chroma","yellow","alpha","css","contrast","darken","multiValue","multiValueLabel","multiValueRemove","_ref4",":hover","EditableDocument","_ref5","_ref5$initialText","initialText","_ref5$phraseBank","phraseBank","_ref5$validator","validator","inputValue","changeInputValue","green","changeValue","validationErrors","changeValidationErrors","loadOptions","_ref7","asyncToGenerator","regenerator_default","mark","_callee","scRes","possiblePhrases","wrap","_context","prev","lookup","found","abrupt","startsWith","suggestions","_ref8","word","stop","_x","apply","this","arguments","AsyncCreatable_default","isClearable","isMulti","v","result","join","onInputChange","onKeyDown","_ref6","toConsumableArray","placeholder","red","Transcriber","initialTranscriptionText","audio","phraseBankParam","NLP_ANNOTATOR_AUTOPLAY","autoPlayStatus","changeAutoPlayStatus","changePhraseBank","useEffect","_loadPhraseBank","fullPhraseBank","url","saveName","urlPhrases","Array","isArray","every","endsWith","fetch","then","res","t0","trim","sent","t1","finish","loadPhraseBank","textAlign","autoPlay","loop","controlsList","controls","src","checked","Container","children","finishButton","&&","NLPAnnotator","output","changeOutput","onFinish","newOutput","msg","ErrorBoundaryDialog","state","hasError","info","setState","componentStack","onClose","Component","header","button","content","warning","ReactDOM","render","MuiThemeProvider_default","location","search","samples","changeSamples","sampleIndex","changeSampleIndex","_useState6$","loadUrl","_useState6$$outputNam","outputName","changeMetaInfo","_loadData","queryString","load_url","output_name","axios","get","loadData","method","name","defaultValue","download","answer","_samples$sampleIndex","multiple","prop","console","log","set","cloneDeep","annotatorOpen","changeAnnotatorOpen","load","Base64","decode","error","getInitialAnnotatorProps","annotatorProps","changeAnnotatorProps","changeLastOutput","ErrorBoundaryDialog_ErrorBoundaryDialog","DemoSite_Editor","getElementById"],"mappings":"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","file":"static/js/main.e199d21c.chunk.js","sourcesContent":["// @flow\n\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\"\nimport \"./theme.css\"\n\nconst useStyles = makeStyles({\n  container: {\n    fontFamily: '\"Inter UI\", sans-serif'\n  }\n})\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Inter UI\", \"Roboto\", sans-serif'\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: \"none\"\n      }\n    }\n  }\n})\n\nexport default ({ children }: any) => {\n  const classes = useStyles()\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.container}>{children}</div>\n    </MuiThemeProvider>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport Select from \"react-select\"\nimport Code from \"react-syntax-highlighter\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport MonacoEditor from \"react-monaco-editor\"\n\nconst useStyles = makeStyles({\n  editBar: {\n    padding: 10,\n    borderBottom: \"1px solid #ccc\",\n    backgroundColor: \"#f8f8f8\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& .button\": { margin: 5 }\n  },\n  select: { width: 240, fontSize: 14 },\n  contentArea: {\n    padding: 10\n  },\n  specificationArea: {\n    padding: 10\n  }\n})\n\nconst loadSavedInput = () => {\n  try {\n    return JSON.parse(window.localStorage.getItem(\"nlpCustomInput\") || \"{}\")\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const examples = {\n  SimpleLabelSequence: () => ({\n    type: \"label-sequence\",\n    document: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis pharetra ipsum tristique ligula venenatis placerat. Interdum et malesuada fames ac ante ipsum primis in faucibus. Fusce mollis velit nec tellus sollicitudin aliquam. In velit erat, iaculis id consectetur et, tincidunt sit amet mauris. Quisque ultricies, purus eleifend congue malesuada, ipsum erat molestie dolor, in pellentesque lacus purus vel nisl. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla sed vestibulum magna. Quisque ut lorem imperdiet, aliquam velit nec, dictum felis.`,\n    labels: [\n      {\n        id: \"noun\",\n        displayName: \"Noun\"\n      },\n      {\n        id: \"proper-noun\",\n        displayName: \"Proper Noun\"\n      }\n    ]\n  }),\n  SimpleLabelDocument: () => ({\n    type: \"label-document\",\n    document: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis pharetra ipsum tristique ligula venenatis placerat. Interdum et malesuada fames ac ante ipsum primis in faucibus. Fusce mollis velit nec tellus sollicitudin aliquam. In velit erat, iaculis id consectetur et, tincidunt sit amet mauris. Quisque ultricies, purus eleifend congue malesuada, ipsum erat molestie dolor, in pellentesque lacus purus vel nisl. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla sed vestibulum magna. Quisque ut lorem imperdiet, aliquam velit nec, dictum felis.`,\n    labels: [\n      {\n        id: \"latin\",\n        displayName: \"Latin\"\n      },\n      {\n        id: \"english\",\n        displayName: \"English\"\n      },\n      {\n        id: \"german\",\n        displayName: \"German\"\n      }\n    ]\n  }),\n  Custom: () => loadSavedInput()\n}\n\nconst Editor = ({\n  initialAnnotatorProps,\n  onOpenAnnotator,\n  lastOutput\n}: any) => {\n  const c = useStyles()\n  const [currentError, changeCurrentError] = useState()\n  const [selectedExample, changeSelectedExample] = useState(\n    window.localStorage.getItem(\"nlpCustomInput\")\n      ? \"Custom\"\n      : \"SimpleLabelSequence\"\n  )\n  const [outputDialogOpen, changeOutputOpen] = useState(lastOutput)\n  const [currentJSONValue, changeCurrentJSONValue] = useState(\n    initialAnnotatorProps\n      ? JSON.stringify(initialAnnotatorProps, null, \"  \")\n      : JSON.stringify(examples[selectedExample](), null, \"  \")\n  )\n  return (\n    <div>\n      <div className={c.editBar}>\n        <h3>React NLP Annotate</h3>\n        <div style={{ flexGrow: 1 }} />\n        <div>\n          <div style={{ display: \"inline-flex\" }}>\n            <Select\n              className={c.select}\n              value={{ label: selectedExample, value: selectedExample }}\n              options={Object.keys(examples).map(s => ({\n                label: s,\n                value: s\n              }))}\n              onChange={selectedOption => {\n                changeSelectedExample(selectedOption.value)\n\n                changeCurrentJSONValue(\n                  JSON.stringify(\n                    selectedOption.value === \"Custom\"\n                      ? loadSavedInput()\n                      : examples[selectedOption.value](),\n                    null,\n                    \"  \"\n                  )\n                )\n              }}\n            />\n          </div>\n          <Button\n            className=\"button\"\n            disabled={!lastOutput}\n            onClick={() => changeOutputOpen(true)}\n          >\n            View Output\n          </Button>\n          <Button\n            className=\"button\"\n            variant=\"outlined\"\n            disabled={Boolean(currentError)}\n            onClick={() =>\n              onOpenAnnotator(\n                selectedExample === \"Custom\"\n                  ? JSON.parse(currentJSONValue)\n                  : examples[selectedExample]()\n              )\n            }\n          >\n            Open Annotator\n          </Button>\n        </div>\n      </div>\n      <div\n        className={c.contentArea}\n        style={\n          currentError\n            ? { border: \"2px solid #f00\" }\n            : { border: \"2px solid #fff\" }\n        }\n      >\n        <div>\n          <MonacoEditor\n            value={currentJSONValue}\n            language=\"javascript\"\n            onChange={code => {\n              try {\n                window.localStorage.setItem(\n                  \"nlpCustomInput\",\n                  JSON.stringify(JSON.parse(code))\n                )\n                changeCurrentError(null)\n              } catch (e) {\n                changeCurrentError(e.toString())\n              }\n              changeCurrentJSONValue(code)\n            }}\n            width=\"100%\"\n            height=\"550px\"\n          />\n        </div>\n      </div>\n      <div className={c.specificationArea}>\n        <h2>React NLP Annotate Format</h2>\n        <Code language=\"javascript\">{`\n// There are several types of annotators you can use...\n\nexport type LabelDocumentProps = {\n  type: \"label-document\",\n  labels: Array<Label>,\n  multipleLabels?: boolean,\n  initialLabels?: Array<string>,\n  document: string,\n  onChange: (Array<string> | string | null) => any\n}\n\nexport type SequenceAnnotatorProps = {\n  type: \"label-sequence\",\n  labels: Array<Label>,\n  initialSequence?: Array<SequenceItem>,\n  document: string,\n  onChange: (sequence: Array<SequenceItem>) => any\n}\n\nexport type TranscriberProps = {\n  type: \"transcribe\",\n  audio: string,\n  phraseBank?: Array<string>,\n  validator?: string => Array<string>,\n  initialTranscriptionText?: string,\n  onChange: string => any\n}\n\nexport type NLPAnnotatorProps = {\n  ...\n    | $Exact<SequenceAnnotatorProps>\n    | $Exact<LabelDocumentProps>\n    | $Exact<TranscriberProps>,\n  onFinish?: string,\n  onChange?: string\n}\n`}</Code>\n      </div>\n      <Dialog fullScreen open={outputDialogOpen}>\n        <DialogTitle>React NLP Annotate Output</DialogTitle>\n        <DialogContent style={{ minWidth: 400 }}>\n          <MonacoEditor\n            value={JSON.stringify(lastOutput, null, \"  \")}\n            language=\"javascript\"\n            width=\"100%\"\n            height=\"550px\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => changeOutputOpen(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Editor\n","// @flow\n\nconst stringToSequence = (doc: string) => {\n  const sepRe = /[a-zA-Z]+/g\n  let m\n  let indices = [0]\n  do {\n    m = sepRe.exec(doc)\n    if (m) {\n      indices.push(m.index)\n      indices.push(m.index + m[0].length)\n    }\n  } while (m)\n  indices = indices.concat([doc.length])\n  return indices\n    .filter((_, i) => indices[i] !== indices[i + 1])\n    .map((_, i) => ({\n      text: doc.slice(indices[i], indices[i + 1])\n    }))\n    .filter(s => s.text.length > 0)\n}\n\nexport default stringToSequence\n","// @flow\n\nimport React, { useState } from \"react\"\nimport type { SequenceItem } from \"../../types\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport stringToSequence from \"../../string-to-sequence.js\"\n\nconst useStyles = makeStyles({})\n\ntype Props = {\n  sequence: Array<SequenceItem>,\n  canModifySequence?: boolean,\n  onSequenceChange?: (Array<SequenceItem>) => any,\n  onHighlightedChanged?: (Array<number>) => any,\n  nothingHighlighted?: boolean,\n  colorLabelMap?: Object\n}\n\nexport default function Document({\n  sequence,\n  onHighlightedChanged = () => null,\n  onSequenceChange = () => null,\n  nothingHighlighted,\n  colorLabelMap = {}\n}: Props) {\n  const [mouseDown, changeMouseDown] = useState()\n  const [[firstSelected, lastSelected], changeHighlightedRangeState] = useState(\n    [null, null]\n  )\n  const changeHighlightedRange = ([first, last]) => {\n    changeHighlightedRangeState([first, last])\n    const highlightedItems = []\n    for (let i = Math.min(first, last); i <= Math.max(first, last); i++)\n      highlightedItems.push(i)\n    onHighlightedChanged(highlightedItems)\n  }\n  let highlightedItems = []\n  if (!nothingHighlighted && firstSelected !== null && lastSelected !== null) {\n    for (\n      let i = Math.min(firstSelected, lastSelected);\n      i <= Math.max(firstSelected, lastSelected);\n      i++\n    )\n      highlightedItems.push(i)\n  }\n\n  return (\n    <div\n      onMouseDown={() => changeMouseDown(true)}\n      onMouseUp={() => changeMouseDown(false)}\n    >\n      {sequence.map((seq, i) => (\n        <>\n          <span\n            onMouseDown={() => {\n              if (seq.label) return\n              changeHighlightedRange([i, i])\n            }}\n            onMouseMove={() => {\n              if (seq.label) return\n              if (mouseDown && i !== lastSelected) {\n                changeHighlightedRange([\n                  firstSelected === null ? i : firstSelected,\n                  i\n                ])\n              }\n            }}\n            style={\n              seq.label\n                ? {\n                    display: \"inline-flex\",\n                    backgroundColor:\n                      seq.color || colorLabelMap[seq.label] || \"#333\",\n                    color: \"#fff\",\n                    padding: 4,\n                    margin: 4,\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    borderRadius: 4,\n                    userSelect: \"none\"\n                  }\n                : {\n                    display: \"inline-flex\",\n                    backgroundColor:\n                      seq.text !== \" \" && highlightedItems.includes(i)\n                        ? \"#ccc\"\n                        : \"inherit\",\n                    color: \"#333\",\n                    marginTop: 4,\n                    marginBottom: 4,\n                    paddingTop: 4,\n                    paddingBottom: 4,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    userSelect: \"none\"\n                  }\n            }\n            key={i}\n          >\n            <div>{seq.text}</div>\n            {seq.label && (\n              <div\n                onClick={() => {\n                  onSequenceChange(\n                    sequence\n                      .flatMap(s => (s !== seq ? s : stringToSequence(s.text)))\n                      .filter(s => s.text.length > 0)\n                  )\n                }}\n                style={{\n                  display: \"inline-flex\",\n                  cursor: \"pointer\",\n                  alignSelf: \"center\",\n                  fontSize: 11,\n                  width: 18,\n                  height: 18,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginLeft: 4,\n                  borderRadius: 9,\n                  color: \"#fff\",\n                  backgroundColor: \"rgba(0,0,0,0.2)\"\n                }}\n              >\n                <span>{\"\\u2716\"}</span>\n              </div>\n            )}\n          </span>\n        </>\n      ))}\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport type { Label as LabelType } from \"../../types.js\"\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\"\nimport classnames from \"classnames\"\nimport makeStyles from \"@material-ui/styles/makeStyles\"\n\nconst useStyles = makeStyles({\n  label: {\n    display: \"inline-flex\",\n    cursor: \"pointer\",\n    padding: 8,\n    paddingLeft: 12,\n    paddingRight: 12,\n    margin: 4,\n    borderRadius: 4,\n    fontSize: 18,\n    color: \"#fff\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      opacity: 0.6\n    },\n    \"&.small\": {\n      fontSize: 12,\n      fontWeight: \"bold\"\n    }\n  }\n})\n\nconst Label = (props: {\n  ...$Exact<LabelType>,\n  hasChildren?: boolean,\n  small?: boolean,\n  hotkey?: string,\n  deletable?: boolean,\n  onClick: string => any\n}) => {\n  const {\n    parent,\n    color,\n    displayName,\n    description,\n    id,\n    small,\n    hasChildren,\n    hotkey,\n    deletable\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div\n      onClick={() => props.onClick(id)}\n      className={classnames(classes.label, small && \"small\")}\n      style={{ backgroundColor: color }}\n    >\n      {hasChildren && (\n        <FolderOpenIcon\n          style={{\n            width: small ? 12 : 20,\n            height: small ? 12 : 20,\n            marginRight: small ? 3 : 6\n          }}\n        />\n      )}\n      <div>{displayName || id}</div>\n      {hotkey && <div style={{ paddingLeft: 4 }}>({hotkey})</div>}\n      {deletable && (\n        <div\n          style={{\n            display: \"inline-flex\",\n            cursor: \"pointer\",\n            alignSelf: \"center\",\n            fontSize: 11,\n            width: 18,\n            height: 18,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginLeft: 4,\n            borderRadius: 9,\n            color: \"#fff\",\n            backgroundColor: \"rgba(0,0,0,0.2)\"\n          }}\n        >\n          <span>{\"\\u2716\"}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Label\n","// @flow\n\nimport React, { useState, useLayoutEffect, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport type { Label as LabelType } from \"../../types.js\"\nimport LabelButton from \"../LabelButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nconst useStyles = makeStyles({\n  tooltip: {\n    whiteSpace: \"pre-wrap\"\n  }\n})\n\nconst findRouteFromParents = (labelId, labels) => {\n  if (!labelId) return []\n  const label = labels.find(l => (l.id || \"root\") === labelId) || {}\n  if (label) {\n    return findRouteFromParents(label.parent, labels).concat([labelId])\n  }\n  return [labelId]\n}\n\nexport default ({\n  labels,\n  onSelectLabel\n}: {\n  labels: Array<LabelType>,\n  onSelectLabel: string => any\n}) => {\n  const [parents, changeParents] = useState([])\n  const currentParent =\n    parents.length > 0 ? parents[parents.length - 1] : undefined\n\n  const hotkeyLabelMap = { r: \"root\" }\n  const labelHotkeyMap = { root: \"r\" }\n  for (let i = 0; i < labels.length; i++) {\n    const label = labels[i]\n    const letters = (label.displayName || label.id).toLowerCase().split(\"\")\n    for (const letter of letters) {\n      if (!hotkeyLabelMap[letter]) {\n        hotkeyLabelMap[letter] = label.id\n        labelHotkeyMap[label.id] = letter\n        break\n      }\n    }\n  }\n\n  useLayoutEffect(() => {\n    const eventFunc = e => {\n      if (hotkeyLabelMap[e.key]) {\n        const labelId = hotkeyLabelMap[e.key]\n        if (!labels.some(l2 => l2.parent === labelId)) {\n          if (labelId === \"root\") {\n            changeParents([])\n          } else {\n            onSelectLabel(labelId)\n          }\n        } else {\n          changeParents(findRouteFromParents(labelId, labels))\n        }\n      }\n    }\n\n    window.addEventListener(\"keydown\", eventFunc)\n    return () => {\n      window.removeEventListener(\"keydown\", eventFunc)\n    }\n  })\n\n  const c = useStyles()\n\n  return (\n    <div>\n      {labels.some(l => l.parent) && (\n        <div\n          style={{ alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\" }}\n        >\n          <LabelButton\n            small\n            color={parents.length > 0 ? \"#333\" : \"#ccc\"}\n            displayName=\"Root (r)\"\n            id=\"\"\n            onClick={() => changeParents([])}\n          />\n          {parents\n            .map(p => labels.find(l => l.id === p))\n            .filter(Boolean)\n            .map(l => ({\n              ...l,\n              hasChildren: labels.some(l2 => l2.parent === l.id)\n            }))\n            .map((l, i) => (\n              <Tooltip\n                // open={helpOpen}\n                classes={{ tooltip: c.tooltip }}\n                key={i}\n                title={l.description || \"No Description\"}\n                placement=\"bottom\"\n              >\n                <LabelButton\n                  small\n                  {...l}\n                  hotkey={labelHotkeyMap[l.id]}\n                  onClick={() => {\n                    changeParents(parents.slice(0, parents.indexOf(l.id) + 1))\n                  }}\n                />\n              </Tooltip>\n            ))}\n        </div>\n      )}\n      <div style={{ display: \"flex\", alignItems: \"center\", flexWrap: \"wrap\" }}>\n        {labels\n          .filter(l => l.parent === currentParent)\n          .map(l => ({\n            ...l,\n            hasChildren: labels.some(l2 => l2.parent === l.id)\n          }))\n          .map((l, i) => (\n            <Tooltip\n              key={i}\n              classes={{ tooltip: c.tooltip }}\n              title={l.description || \"No Description\"}\n              placement=\"bottom\"\n            >\n              <div>\n                <LabelButton\n                  {...l}\n                  hotkey={labelHotkeyMap[l.id]}\n                  onClick={\n                    !l.hasChildren\n                      ? onSelectLabel\n                      : () => {\n                          changeParents(parents.concat([l.id]))\n                        }\n                  }\n                />\n              </div>\n            </Tooltip>\n          ))}\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nconst mergeSequence = (\n  seq: Array<{ text: string, label?: string, color?: string }>\n) => {\n  const newSeq = []\n  let current = [seq[0]]\n  for (let i = 1; i < seq.length; i++) {\n    if (current[0].label === seq[i].label) {\n      current.push(seq[i])\n    } else {\n      newSeq.push({\n        label: current[0].label,\n        text: current.reduce((acc, c) => acc + c.text, \"\")\n      })\n      current = [seq[i]]\n    }\n  }\n  newSeq.push({\n    label: current[0].label,\n    text: current.reduce((acc, c) => acc + c.text, \"\")\n  })\n  return newSeq\n}\n\nexport default mergeSequence\n","// @flow\n\nimport * as colors from \"@material-ui/core/colors\"\n\nexport default Object.keys(colors)\n  .filter(c => c !== \"common\")\n  .map(c => colors[c][700])\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\n\nimport type { SequenceAnnotatorProps } from \"../../types\"\nimport Document from \"../Document\"\nimport LabelSelector from \"../LabelSelector\"\nimport stringToSequence from \"../../string-to-sequence.js\"\nimport mergeSequence from \"../../merge-sequence.js\"\nimport colors from \"../../colors\"\n\nexport default function SequenceAnnotator(props: SequenceAnnotatorProps) {\n  const [highlightedItems, changeHighlightedItems] = useState([])\n  const [sequence, changeSequence] = useState(\n    () => props.initialSequence || stringToSequence(props.document)\n  )\n  const colorLabelMap = useMemo(\n    () =>\n      props.labels.reduce(\n        (acc, l, i) => ((acc[l.id] = colors[i % colors.length]), acc),\n        {}\n      ),\n    [props.labels]\n  )\n\n  return (\n    <div>\n      <div>\n        <LabelSelector\n          labels={props.labels}\n          onSelectLabel={(label: string) => {\n            const { color } = props.labels.find(({ id }) => label === id) || {}\n            let buildText = \"\"\n            const newSequence = []\n            for (let itemIndex = 0; itemIndex < sequence.length; itemIndex++) {\n              const item = sequence[itemIndex]\n              if (!highlightedItems.includes(itemIndex) || item.label) {\n                if (buildText.length > 0) {\n                  newSequence.push({\n                    text: buildText,\n                    color,\n                    label\n                  })\n                  buildText = \"\"\n                }\n                newSequence.push(item)\n              } else {\n                buildText += item.text\n              }\n            }\n            if (buildText.length > 0) {\n              newSequence.push({\n                text: buildText,\n                color,\n                label\n              })\n            }\n\n            changeSequence(newSequence)\n            props.onChange(mergeSequence(newSequence))\n            changeHighlightedItems([])\n          }}\n        />\n      </div>\n      <div style={{ borderTop: \"1px solid #ccc\", marginTop: 8, paddingTop: 5 }}>\n        <Document\n          colorLabelMap={colorLabelMap}\n          nothingHighlighted={highlightedItems.length === 0}\n          onHighlightedChanged={highlightedItems =>\n            changeHighlightedItems(highlightedItems)\n          }\n          onSequenceChange={sequence => {\n            changeSequence(sequence)\n            props.onChange(mergeSequence(sequence))\n          }}\n          sequence={sequence}\n        />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\n\nimport type { LabelDocumentProps } from \"../../types\"\nimport Document from \"../Document\"\nimport LabelSelector from \"../LabelSelector\"\nimport stringToSequence from \"../../string-to-sequence.js\"\nimport LabelButton from \"../LabelButton\"\n\nexport default function DocumentLabeler(props: LabelDocumentProps) {\n  const [selectedLabels, changeSelectedLabels] = useState(\n    props.initialLabels || (props.initialLabel ? [props.initialLabel] : [])\n  )\n  const sequence = useMemo(() => stringToSequence(props.document), [\n    props.document\n  ])\n  return (\n    <div>\n      <div>\n        <LabelSelector\n          labels={props.labels}\n          onSelectLabel={(labelId: string) => {\n            if (props.multipleLabels) {\n              changeSelectedLabels(selectedLabels.concat([labelId]))\n              props.onChange(selectedLabels.concat([labelId]))\n            } else {\n              props.onChange(labelId)\n              changeSelectedLabels([labelId])\n            }\n          }}\n        />\n      </div>\n      <div style={{ borderTop: \"1px solid #ccc\", marginTop: 8, paddingTop: 5 }}>\n        <div>\n          {selectedLabels.map(labelId => {\n            const label = props.labels.find(l => l.id === labelId)\n            if (!label) return\n            return (\n              <LabelButton\n                {...label}\n                small\n                deletable\n                onClick={(labelId: string) => {\n                  const newSelectedLabels = selectedLabels.filter(\n                    l => l !== labelId\n                  )\n                  changeSelectedLabels(newSelectedLabels)\n                  if (props.multipleLabels) {\n                    props.onChange(newSelectedLabels)\n                  } else {\n                    props.onChange(null)\n                  }\n                }}\n              />\n            )\n          })}\n        </div>\n        <Document nothingHighlighted sequence={sequence} />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport CreatableSelect from \"react-select/lib/AsyncCreatable\"\nimport Spelling from \"spelling\"\nimport enDictionary from \"spelling/dictionaries/en_US\"\nimport chroma from \"chroma-js\"\nimport { green, yellow, red } from \"@material-ui/core/colors\"\n\nconst spellChecker = new Spelling(enDictionary)\n\nconst components = {}\nconst createOption = (label, color) => ({\n  label,\n  value: label + Math.random().toString(),\n  color\n})\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: \"white\" }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color || yellow[700])\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : color.alpha(0.05).css(),\n      color: isDisabled\n        ? \"#ccc\"\n        : isSelected\n        ? chroma.contrast(color, \"white\") > 2\n          ? \"white\"\n          : \"black\"\n        : color\n            .darken()\n            .darken()\n            .css(),\n      cursor: isDisabled ? \"not-allowed\" : \"default\"\n    }\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css()\n    }\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: chroma(data.color)\n      .darken()\n      .darken()\n      .css()\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: chroma(data.color)\n      .darken()\n      .darken()\n      .css(),\n    \":hover\": {\n      backgroundColor: data.color,\n      color: \"white\"\n    }\n  })\n}\n\nexport default function EditableDocument({\n  initialText = \"\",\n  onChange,\n  phraseBank = [],\n  validator = () => []\n}: {\n  initialText?: string,\n  validator?: string => Array<string>,\n  onChange: string => any,\n  phraseBank?: Array<string>\n}) {\n  const [inputValue, changeInputValue] = useState()\n  const [value, changeValue] = useState(\n    initialText\n      ? [{ value: initialText, label: initialText, color: green[500] }]\n      : []\n  )\n  const [validationErrors, changeValidationErrors] = useState([])\n\n  const handleChange = v => {\n    changeValue(v)\n    const result = v.map(l => l.label).join(\" \")\n    try {\n      changeValidationErrors(validator(result))\n    } catch (e) {\n      changeValidationErrors([\"Error: Validator had error: \" + e.toString()])\n    }\n    onChange(result)\n  }\n  const handleInputChange = v => changeInputValue(v)\n  const handleKeyDown = ({ key }) => {\n    if (!inputValue) return\n    if (key === \"Enter\" || key === \"Tab\") {\n      changeValue([...value, createOption(inputValue + \" \", yellow[700])])\n      changeInputValue(\"\")\n    }\n  }\n\n  const loadOptions = async text => {\n    let bestOption\n    text = text.toLowerCase()\n    const scRes = spellChecker.lookup(text)\n    if (scRes.found || phraseBank.includes(text))\n      return [createOption(text, green[500])]\n\n    const possiblePhrases = phraseBank.filter(p => p.startsWith(text))\n    return [bestOption || createOption(text, yellow[700])]\n      .concat(\n        possiblePhrases\n          .filter(p => p !== text)\n          .map(p => createOption(p, green[500]))\n      )\n      .concat(\n        scRes.suggestions\n          .slice(0, 6)\n          .map(({ word }) => createOption(word, green[500]))\n      )\n  }\n\n  return (\n    <div style={{ fontSize: 18 }}>\n      <CreatableSelect\n        components={components}\n        inputValue={inputValue}\n        isClearable\n        isMulti\n        onChange={handleChange}\n        onInputChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Begin writing...\"\n        loadOptions={loadOptions}\n        value={value}\n        styles={colourStyles}\n      />\n      <div\n        style={{\n          fontSize: 14,\n          height: 100,\n          marginTop: 8,\n          borderRadius: 2,\n          padding: 8\n        }}\n      >\n        {validationErrors.map(v => (\n          <div\n            style={{\n              marginTop: 8,\n              color: v.toLowerCase().includes(\"error:\") ? red[800] : yellow[800]\n            }}\n          >\n            {v}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport EditableDocument from \"../EditableDocument\"\nimport type { TranscriberProps } from \"../../types\"\n\nexport default ({\n  initialTranscriptionText,\n  onChange,\n  audio,\n  phraseBank: phraseBankParam,\n  validator\n}: TranscriberProps) => {\n  const [autoPlayStatus, changeAutoPlayStatus] = useState(\n    window.localStorage.NLP_ANNOTATOR_AUTOPLAY === \"true\"\n  )\n  // TODO create hook for usePhraseBank\n  const [phraseBank, changePhraseBank] = useState(undefined)\n  useEffect(() => {\n    async function loadPhraseBank() {\n      if (typeof phraseBankParam === \"string\") {\n        phraseBankParam = [phraseBankParam]\n      }\n      if (\n        Array.isArray(phraseBankParam) &&\n        phraseBankParam.every(\n          p =>\n            p.startsWith(\"http\") && (p.endsWith(\".txt\") || p.endsWith(\".csv\"))\n        )\n      ) {\n        const fullPhraseBank = []\n        for (const url of phraseBankParam) {\n          let found\n          const saveName = `NLP_ANNOTATOR_PHRASE_BANK_${url}`\n          if (window.localStorage[saveName]) {\n            try {\n              fullPhraseBank.push(...JSON.parse(window.localStorage[saveName]))\n              found = true\n            } catch (e) {}\n          }\n          if (!found) {\n            const urlPhrases = (await fetch(url).then(res => res.text()))\n              .split(\"\\n\")\n              .map(a => a.trim().toLowerCase())\n            window.localStorage[saveName] = JSON.stringify(urlPhrases)\n            fullPhraseBank.push(...urlPhrases)\n          }\n        }\n        changePhraseBank(fullPhraseBank)\n      } else if (Array.isArray(phraseBankParam)) {\n        changePhraseBank(phraseBankParam)\n      }\n    }\n    loadPhraseBank()\n    return () => {}\n  }, [phraseBankParam])\n\n  return (\n    <div>\n      <div style={{ textAlign: \"center\", padding: 10 }}>\n        <audio\n          autoPlay={autoPlayStatus}\n          loop\n          controlsList=\"nodownload\"\n          controls\n        >\n          <source src={audio} />\n        </audio>\n        <span style={{ fontSize: 12 }}>\n          Autoplay:{\" \"}\n          <input\n            checked={autoPlayStatus}\n            type=\"checkbox\"\n            onChange={() => {\n              window.localStorage.NLP_ANNOTATOR_AUTOPLAY = JSON.stringify(\n                window.localStorage.NLP_ANNOTATOR_AUTOPLAY !== \"true\"\n              )\n              changeAutoPlayStatus(\n                JSON.parse(window.localStorage.NLP_ANNOTATOR_AUTOPLAY)\n              )\n            }}\n          />\n        </span>\n      </div>\n      <div style={{ padding: 10 }}>\n        <EditableDocument\n          phraseBank={phraseBank}\n          validator={validator}\n          onChange={onChange}\n          initialText={initialTranscriptionText}\n        />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\n\nexport default ({ children }: any) => (\n  <div style={{ border: \"1px solid #ccc\", padding: 10, borderRadius: 4 }}>\n    {children}\n  </div>\n)\n","// @flow\n\nimport React, { useState, useLayoutEffect } from \"react\"\n\nimport type { NLPAnnotatorProps } from \"../../types\"\nimport SequenceAnnotator from \"../SequenceAnnotator\"\nimport DocumentLabeler from \"../DocumentLabeler\"\nimport Transcriber from \"../Transcriber\"\nimport colors from \"../../colors\"\nimport { green } from \"@material-ui/core/colors\"\nimport makeStyles from \"@material-ui/styles/makeStyles\"\nimport Container from \"../Container\"\nimport Button from \"@material-ui/core/Button\"\n\nconst useStyles = makeStyles({\n  finishButton: {\n    \"&&\": {\n      fontSize: 14,\n      textTransform: \"none\",\n      backgroundColor: green[500],\n      padding: 10,\n      color: \"#fff\",\n      margin: 10,\n      fontWeight: \"bold\",\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    }\n  }\n})\n\nexport default function NLPAnnotator(props: NLPAnnotatorProps) {\n  const classes = useStyles()\n  let [output, changeOutput] = useState(null)\n\n  if (output === null && props.type === \"transcribe\") {\n    output = props.initialTranscriptionText\n  }\n  if (output === null && props.type === \"label-sequence\") {\n    output = [{ text: props.document }]\n  }\n\n  useLayoutEffect(() => {\n    const eventFunc = e => {\n      if (e.key === \"Enter\") {\n        if (props.onFinish) props.onFinish(output)\n      }\n    }\n    window.addEventListener(\"keydown\", eventFunc)\n    return () => {\n      window.removeEventListener(\"keydown\", eventFunc)\n    }\n  })\n\n  const onChange = (newOutput: any) => {\n    if (props.onChange) props.onChange(newOutput)\n    changeOutput(newOutput)\n  }\n  if (props.labels && (props: any).labels.some(l => !l.color)) {\n    props = ({\n      ...props,\n      labels: (props: any).labels.map((l, i) => ({\n        color: colors[i % colors.length],\n        ...l\n      }))\n    }: any)\n  }\n  let finishButton = null\n  if (props.onFinish) {\n    finishButton = (\n      <Button\n        disabled={\n          props.validator &&\n          (props: any)\n            .validator(output)\n            .some(msg => msg.toLowerCase().includes(\"error:\"))\n        }\n        onClick={() => {\n          props.onFinish(output)\n        }}\n        className={classes.finishButton}\n      >\n        Complete (enter)\n      </Button>\n    )\n  }\n  if (props.type === \"label-sequence\") {\n    return (\n      <Container>\n        <SequenceAnnotator {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  if (props.type === \"label-document\") {\n    return (\n      <Container>\n        <DocumentLabeler {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  if (props.type === \"transcribe\") {\n    return (\n      <Container>\n        <Transcriber {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  return null\n}\n","// @flow\n\nimport React, { Component } from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport Button from \"@material-ui/core/Button\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\n\nexport default class ErrorBoundaryDialog extends Component {\n  state = { hasError: false, err: \"\" }\n  componentDidCatch(err, info) {\n    this.setState({\n      hasError: true,\n      err: err.toString() + \"\\n\\n\" + info.componentStack\n    })\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Dialog open={this.state.hasError} onClose={this.props.onClose}>\n          <DialogTitle>Error Loading Annotator</DialogTitle>\n          <DialogContent>\n            <pre>{this.state.err}</pre>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.onClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      )\n    }\n    return this.props.children\n  }\n}\n","// @flow\nimport React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Editor, { examples } from \"./Editor\"\nimport NLPAnnotator from \"../NLPAnnotator\"\nimport ErrorBoundaryDialog from \"./ErrorBoundaryDialog.js\"\nimport { parse as queryString } from \"query-string\"\nimport { Base64 } from \"js-base64\"\n\nfunction getInitialAnnotatorProps() {\n  const { load } = queryString(window.location.search) || {}\n\n  if (load) {\n    try {\n      return JSON.parse(Base64.decode(load))\n    } catch (e) {\n      console.error(\"Problem loading from load get parameter. Error parsing.\")\n    }\n  }\n\n  return examples[\"Custom\"]()\n}\n\nexport default () => {\n  const [annotatorOpen, changeAnnotatorOpen] = useState(false)\n  const [annotatorProps, changeAnnotatorProps] = useState(\n    getInitialAnnotatorProps()\n  )\n  const [lastOutput, changeLastOutput] = useState()\n\n  return (\n    <div>\n      {annotatorOpen ? (\n        <ErrorBoundaryDialog\n          onClose={() => {\n            changeAnnotatorOpen(false)\n          }}\n        >\n          <NLPAnnotator\n            {...(annotatorProps: any)}\n            onFinish={output => {\n              changeLastOutput(output)\n              changeAnnotatorOpen(false)\n            }}\n          />\n        </ErrorBoundaryDialog>\n      ) : (\n        <Editor\n          initialAnnotatorProps={annotatorProps}\n          lastOutput={lastOutput}\n          onOpenAnnotator={props => {\n            // window.history.pushState(\n            //   window.document.title,\n            //   window.document.title,\n            //   window.location.origin +\n            //     window.location.pathname +\n            //     \"?load=\" +\n            //     Base64.encode(JSON.stringify(props, null, \"  \"))\n            // )\n            changeAnnotatorProps(props)\n            changeAnnotatorOpen(true)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useEffect, useState } from \"react\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport { parse as queryString } from \"query-string\"\nimport Button from \"@material-ui/core/Button\"\nimport axios from \"axios\"\nimport NLPAnnotator from \"../NLPAnnotator\"\nimport set from \"lodash/set\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport download from \"downloadjs\"\n\nconst useStyles = makeStyles({\n  header: {\n    display: \"flex\",\n    padding: 10,\n    backgroundColor: \"#f8f8f8\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #ccc\"\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10\n  },\n  content: {\n    padding: 10\n  },\n  warning: {\n    fontSize: 11,\n    color: \"#f00\",\n    padding: 10,\n    textAlign: \"center\"\n  }\n})\n\nexport default () => {\n  const c = useStyles()\n  const [samples, changeSamples] = useState([])\n  const [sampleIndex, changeSampleIndex] = useState(0)\n  const [{ loadUrl, outputName = \"dataset\" }, changeMetaInfo] = useState({})\n  useEffect(() => {\n    async function loadData() {\n      const { load_url: loadUrl, output_name: outputName } =\n        queryString(window.location.search) || {}\n\n      changeMetaInfo({ loadUrl, outputName })\n\n      if (loadUrl) {\n        const { data } = await axios.get(loadUrl)\n        changeSamples(data)\n      }\n    }\n    loadData()\n    return () => {}\n  }, [])\n\n  return (\n    <div>\n      <div className={c.header}>\n        <div>\n          <div>\n            Sample #{sampleIndex + 1} / {samples.length}\n          </div>\n          <div>\n            <form method=\"GET\">\n              <input name=\"load_url\" defaultValue={loadUrl} />\n              <button>load</button>\n            </form>\n          </div>\n        </div>\n        <div style={{ flexGrow: 1 }} />\n        <Button\n          className={c.button}\n          onClick={() => {\n            // TODO\n            download(\n              JSON.stringify(samples),\n              outputName + \".json\",\n              \"application/json\"\n            )\n          }}\n        >\n          Download\n        </Button>\n        <Button\n          className={c.button}\n          onClick={() =>\n            changeSampleIndex(\n              (sampleIndex - 1 + samples.length) % samples.length\n            )\n          }\n        >\n          Prev Sample\n        </Button>\n        <Button\n          className={c.button}\n          variant=\"outlined\"\n          onClick={() => changeSampleIndex((sampleIndex + 1) % samples.length)}\n        >\n          Next Sample (enter)\n        </Button>\n      </div>\n      <div className={c.warning}>\n        This page will not save your progress on refresh.\n      </div>\n      {!loadUrl && <div className={c.warning}>load_url must be specified</div>}\n      {samples.length > 0 && (\n        <div className={c.content}>\n          <NLPAnnotator\n            key={sampleIndex}\n            {...samples[sampleIndex]}\n            onChange={answer => {\n              const { type, multiple } = samples[sampleIndex]\n              const prop =\n                type === \"label-document\" && multiple\n                  ? \"initialLabels\"\n                  : type === \"label-document\" && !multiple\n                  ? \"initialLabel\"\n                  : type === \"label-sequence\"\n                  ? \"initialSequence\"\n                  : type === \"transcribe\"\n                  ? \"initialTranscriptionText\"\n                  : null\n              console.log(set(cloneDeep(samples), [sampleIndex, prop], answer))\n              changeSamples(\n                set(cloneDeep(samples), [sampleIndex, prop], answer)\n              )\n            }}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Theme from \"./components/Theme\"\nimport DemoSite from \"./components/DemoSite\"\nimport DatasetViewer from \"./components/DatasetViewer\"\n\nReactDOM.render(\n  <Theme>\n    {window.location.search.includes(\"load_url\") ? (\n      <DatasetViewer />\n    ) : (\n      <DemoSite />\n    )}\n  </Theme>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}