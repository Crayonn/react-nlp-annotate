{"version":3,"sources":["components/Theme/index.js","components/DemoSite/Editor.js","string-to-sequence.js","components/Document/index.js","components/LabelButton/index.js","components/LabelSelector/index.js","merge-sequence.js","colors.js","components/SequenceAnnotator/index.js","components/DocumentLabeler/index.js","components/EditableDocument/index.js","components/Transcriber/index.js","components/Container/index.js","components/NLPAnnotator/index.js","components/DemoSite/ErrorBoundaryDialog.js","index.js","components/DemoSite/index.js"],"names":["useStyles","makeStyles","container","fontFamily","theme","createMuiTheme","typography","overrides","MuiButton","root","textTransform","editBar","padding","borderBottom","backgroundColor","display","alignItems","& .button","margin","select","width","fontSize","contentArea","specificationArea","loadSavedInput","JSON","parse","window","localStorage","getItem","e","examples","SimpleLabelSequence","type","document","labels","id","displayName","SimpleLabelDocument","Custom","Editor","_ref","onOpenAnnotator","lastOutput","c","_useState","useState","_useState2","Object","slicedToArray","currentError","changeCurrentError","_useState3","_useState4","selectedExample","changeSelectedExample","_useState5","_useState6","outputDialogOpen","changeOutputOpen","_useState7","stringify","_useState8","currentJSONValue","changeCurrentJSONValue","react_default","a","createElement","className","style","flexGrow","react_select_esm","value","label","options","keys","map","s","onChange","selectedOption","Button_default","disabled","onClick","variant","Boolean","border","lib_default","language","code","setItem","toString","height","default_highlight","Dialog_default","fullScreen","open","DialogTitle_default","DialogContent_default","minWidth","DialogActions_default","stringToSequence","doc","m","sepRe","indices","exec","push","index","length","concat","filter","_","i","text","slice","Document","sequence","_ref$onHighlightedCha","onHighlightedChanged","_ref$onSequenceChange","onSequenceChange","nothingHighlighted","_ref$colorLabelMap","colorLabelMap","mouseDown","changeMouseDown","_useState4$","firstSelected","lastSelected","changeHighlightedRangeState","changeHighlightedRange","_ref2","_ref3","first","last","highlightedItems","Math","min","max","onMouseDown","onMouseUp","seq","Fragment","onMouseMove","color","paddingLeft","paddingRight","borderRadius","userSelect","includes","marginTop","marginBottom","paddingTop","paddingBottom","key","flatMap","cursor","alignSelf","justifyContent","marginLeft","&:hover","opacity","&.small","fontWeight","Label","props","parent","description","small","hasChildren","hotkey","deletable","classes","classnames","FolderOpen_default","marginRight","tooltip","LabelSelector","onSelectLabel","parents","changeParents","currentParent","undefined","hotkeyLabelMap","r","labelHotkeyMap","letters","toLowerCase","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","letter","err","return","useLayoutEffect","eventFunc","labelId","some","l2","findRouteFromParents","find","l","addEventListener","removeEventListener","helpOpen","changeHelpOpen","useEffect","setTimeout","flexDirection","LabelButton","p","objectSpread","Tooltip_default","title","placement","assign","indexOf","mergeSequence","newSeq","current","reduce","acc","colors","SequenceAnnotator","changeHighlightedItems","initialSequence","changeSequence","useMemo","buildText","newSequence","itemIndex","item","borderTop","DocumentLabeler","selectedLabels","changeSelectedLabels","multipleLabels","newSelectedLabels","spellChecker","Spelling","enDictionary","components","createOption","random","colourStyles","control","styles","option","data","isDisabled","isFocused","isSelected","chroma","yellow","alpha","css","contrast","darken","multiValue","multiValueLabel","multiValueRemove","_ref4",":hover","EditableDocument","_ref5","_ref5$initialText","initialText","_ref5$phraseBank","phraseBank","_ref5$validator","validator","inputValue","changeInputValue","green","changeValue","validationErrors","changeValidationErrors","loadOptions","_ref7","asyncToGenerator","regenerator_default","mark","_callee","scRes","possiblePhrases","wrap","_context","prev","lookup","found","abrupt","startsWith","suggestions","_ref8","word","stop","_x","apply","this","arguments","AsyncCreatable_default","isClearable","isMulti","v","result","join","onInputChange","onKeyDown","_ref6","toConsumableArray","placeholder","red","Transcriber","initialTranscriptionText","audio","phraseBankParam","NLP_ANNOTATOR_AUTOPLAY","autoPlayStatus","changeAutoPlayStatus","changePhraseBank","_loadPhraseBank","fullPhraseBank","url","saveName","urlPhrases","Array","isArray","every","endsWith","fetch","then","res","t0","trim","sent","t1","finish","loadPhraseBank","textAlign","autoPlay","loop","controlsList","controls","src","checked","Container","children","finishButton","&&","NLPAnnotator","output","changeOutput","onFinish","newOutput","msg","ErrorBoundaryDialog","state","hasError","info","setState","componentStack","onClose","Component","ReactDOM","render","MuiThemeProvider_default","annotatorOpen","changeAnnotatorOpen","annotatorProps","changeAnnotatorProps","changeLastOutput","ErrorBoundaryDialog_ErrorBoundaryDialog","DemoSite_Editor","getElementById"],"mappings":"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","file":"static/js/main.be0c0176.chunk.js","sourcesContent":["// @flow\n\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\"\nimport \"./theme.css\"\n\nconst useStyles = makeStyles({\n  container: {\n    fontFamily: '\"Inter UI\", sans-serif'\n  }\n})\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Inter UI\", \"Roboto\", sans-serif'\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: \"none\"\n      }\n    }\n  }\n})\n\nexport default ({ children }: any) => {\n  const classes = useStyles()\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.container}>{children}</div>\n    </MuiThemeProvider>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport Select from \"react-select\"\nimport Code from \"react-syntax-highlighter\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport MonacoEditor from \"react-monaco-editor\"\n\nconst useStyles = makeStyles({\n  editBar: {\n    padding: 10,\n    borderBottom: \"1px solid #ccc\",\n    backgroundColor: \"#f8f8f8\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& .button\": { margin: 5 }\n  },\n  select: { width: 240, fontSize: 14 },\n  contentArea: {\n    padding: 10\n  },\n  specificationArea: {\n    padding: 10\n  }\n})\n\nconst loadSavedInput = () => {\n  try {\n    return JSON.parse(window.localStorage.getItem(\"customInput\") || \"{}\")\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const examples = {\n  SimpleLabelSequence: () => ({\n    type: \"label-sequence\",\n    document: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis pharetra ipsum tristique ligula venenatis placerat. Interdum et malesuada fames ac ante ipsum primis in faucibus. Fusce mollis velit nec tellus sollicitudin aliquam. In velit erat, iaculis id consectetur et, tincidunt sit amet mauris. Quisque ultricies, purus eleifend congue malesuada, ipsum erat molestie dolor, in pellentesque lacus purus vel nisl. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla sed vestibulum magna. Quisque ut lorem imperdiet, aliquam velit nec, dictum felis.`,\n    labels: [\n      {\n        id: \"noun\",\n        displayName: \"Noun\"\n      },\n      {\n        id: \"proper-noun\",\n        displayName: \"Proper Noun\"\n      }\n    ]\n  }),\n  SimpleLabelDocument: () => ({\n    type: \"label-document\",\n    document: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis pharetra ipsum tristique ligula venenatis placerat. Interdum et malesuada fames ac ante ipsum primis in faucibus. Fusce mollis velit nec tellus sollicitudin aliquam. In velit erat, iaculis id consectetur et, tincidunt sit amet mauris. Quisque ultricies, purus eleifend congue malesuada, ipsum erat molestie dolor, in pellentesque lacus purus vel nisl. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla sed vestibulum magna. Quisque ut lorem imperdiet, aliquam velit nec, dictum felis.`,\n    labels: [\n      {\n        id: \"latin\",\n        displayName: \"Latin\"\n      },\n      {\n        id: \"english\",\n        displayName: \"English\"\n      },\n      {\n        id: \"german\",\n        displayName: \"German\"\n      }\n    ]\n  }),\n  Custom: () => loadSavedInput()\n}\n\nconst Editor = ({ onOpenAnnotator, lastOutput }: any) => {\n  const c = useStyles()\n  const [currentError, changeCurrentError] = useState()\n  const [selectedExample, changeSelectedExample] = useState(\n    window.localStorage.getItem(\"customInput\")\n      ? \"Custom\"\n      : \"SimpleLabelSequence\"\n  )\n  const [outputDialogOpen, changeOutputOpen] = useState(false)\n  const [currentJSONValue, changeCurrentJSONValue] = useState(\n    JSON.stringify(examples[selectedExample](), null, \"  \")\n  )\n  return (\n    <div>\n      <div className={c.editBar}>\n        <h3>React NLP Annotate</h3>\n        <div style={{ flexGrow: 1 }} />\n        <div>\n          <div style={{ display: \"inline-flex\" }}>\n            <Select\n              className={c.select}\n              value={{ label: selectedExample, value: selectedExample }}\n              options={Object.keys(examples).map(s => ({\n                label: s,\n                value: s\n              }))}\n              onChange={selectedOption => {\n                changeSelectedExample(selectedOption.value)\n\n                changeCurrentJSONValue(\n                  JSON.stringify(\n                    selectedOption.value === \"Custom\"\n                      ? loadSavedInput()\n                      : examples[selectedOption.value](),\n                    null,\n                    \"  \"\n                  )\n                )\n              }}\n            />\n          </div>\n          <Button\n            className=\"button\"\n            disabled={!lastOutput}\n            onClick={() => changeOutputOpen(true)}\n          >\n            View Output\n          </Button>\n          <Button\n            className=\"button\"\n            variant=\"outlined\"\n            disabled={Boolean(currentError)}\n            onClick={() =>\n              onOpenAnnotator(\n                selectedExample === \"Custom\"\n                  ? loadSavedInput()\n                  : examples[selectedExample]\n              )\n            }\n          >\n            Open Annotator\n          </Button>\n        </div>\n      </div>\n      <div\n        className={c.contentArea}\n        style={\n          currentError\n            ? { border: \"2px solid #f00\" }\n            : { border: \"2px solid #fff\" }\n        }\n      >\n        <div>\n          <MonacoEditor\n            value={currentJSONValue}\n            language=\"javascript\"\n            onChange={code => {\n              try {\n                window.localStorage.setItem(\n                  \"customInput\",\n                  JSON.stringify(JSON.parse(code))\n                )\n                changeCurrentError(null)\n              } catch (e) {\n                changeCurrentError(e.toString())\n              }\n              changeCurrentJSONValue(code)\n            }}\n            width=\"100%\"\n            height=\"550px\"\n          />\n        </div>\n      </div>\n      <div className={c.specificationArea}>\n        <h2>React NLP Annotate Format</h2>\n        <Code language=\"javascript\">{`\n// There are several types of annotators you can use...\n\nexport type LabelDocumentProps = {\n  type: \"label-document\",\n  labels: Array<Label>,\n  multipleLabels?: boolean,\n  document: string,\n  onChange: (Array<string> | string | null) => any\n}\n\nexport type SequenceAnnotatorProps = {\n  type: \"label-sequence\",\n  labels: Array<Label>,\n  initialSequence?: Array<SequenceItem>,\n  document: string,\n  onChange: (sequence: Array<SequenceItem>) => any\n}\n\nexport type TranscriberProps = {\n  type: \"transcribe\",\n  audio: string,\n  phraseBank?: Array<string>,\n  validator?: string => Array<string>,\n  initialTranscriptionText?: string,\n  onChange: string => any\n}\n\nexport type NLPAnnotatorProps = {\n  ...\n    | $Exact<SequenceAnnotatorProps>\n    | $Exact<LabelDocumentProps>\n    | $Exact<TranscriberProps>,\n  onFinish?: string,\n  onChange?: string\n}\n`}</Code>\n      </div>\n      <Dialog fullScreen open={outputDialogOpen}>\n        <DialogTitle>React NLP Annotate Output</DialogTitle>\n        <DialogContent style={{ minWidth: 400 }}>\n          <MonacoEditor\n            value={JSON.stringify(lastOutput, null, \"  \")}\n            language=\"javascript\"\n            width=\"100%\"\n            height=\"550px\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => changeOutputOpen(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Editor\n","// @flow\n\nconst stringToSequence = (doc: string) => {\n  const sepRe = /[a-zA-Z]+/g\n  let m\n  let indices = [0]\n  do {\n    m = sepRe.exec(doc)\n    if (m) {\n      indices.push(m.index)\n      indices.push(m.index + m[0].length)\n    }\n  } while (m)\n  indices = indices.concat([doc.length])\n  return indices\n    .filter((_, i) => indices[i] !== indices[i + 1])\n    .map((_, i) => ({\n      text: doc.slice(indices[i], indices[i + 1])\n    }))\n    .filter(s => s.text.length > 0)\n}\n\nexport default stringToSequence\n","// @flow\n\nimport React, { useState } from \"react\"\nimport type { SequenceItem } from \"../../types\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport stringToSequence from \"../../string-to-sequence.js\"\n\nconst useStyles = makeStyles({})\n\ntype Props = {\n  sequence: Array<SequenceItem>,\n  canModifySequence?: boolean,\n  onSequenceChange?: (Array<SequenceItem>) => any,\n  onHighlightedChanged?: (Array<number>) => any,\n  nothingHighlighted?: boolean,\n  colorLabelMap?: Object\n}\n\nexport default function Document({\n  sequence,\n  onHighlightedChanged = () => null,\n  onSequenceChange = () => null,\n  nothingHighlighted,\n  colorLabelMap = {}\n}: Props) {\n  const [mouseDown, changeMouseDown] = useState()\n  const [[firstSelected, lastSelected], changeHighlightedRangeState] = useState(\n    [null, null]\n  )\n  const changeHighlightedRange = ([first, last]) => {\n    changeHighlightedRangeState([first, last])\n    const highlightedItems = []\n    for (let i = Math.min(first, last); i <= Math.max(first, last); i++)\n      highlightedItems.push(i)\n    onHighlightedChanged(highlightedItems)\n  }\n  let highlightedItems = []\n  if (!nothingHighlighted && firstSelected !== null && lastSelected !== null) {\n    for (\n      let i = Math.min(firstSelected, lastSelected);\n      i <= Math.max(firstSelected, lastSelected);\n      i++\n    )\n      highlightedItems.push(i)\n  }\n\n  return (\n    <div\n      onMouseDown={() => changeMouseDown(true)}\n      onMouseUp={() => changeMouseDown(false)}\n    >\n      {sequence.map((seq, i) => (\n        <>\n          <span\n            onMouseDown={() => {\n              if (seq.label) return\n              changeHighlightedRange([i, i])\n            }}\n            onMouseMove={() => {\n              if (seq.label) return\n              if (mouseDown && i !== lastSelected) {\n                changeHighlightedRange([\n                  firstSelected === null ? i : firstSelected,\n                  i\n                ])\n              }\n            }}\n            style={\n              seq.label\n                ? {\n                    display: \"inline-flex\",\n                    backgroundColor:\n                      seq.color || colorLabelMap[seq.label] || \"#333\",\n                    color: \"#fff\",\n                    padding: 4,\n                    margin: 4,\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    borderRadius: 4,\n                    userSelect: \"none\"\n                  }\n                : {\n                    display: \"inline-flex\",\n                    backgroundColor:\n                      seq.text !== \" \" && highlightedItems.includes(i)\n                        ? \"#ccc\"\n                        : \"inherit\",\n                    color: \"#333\",\n                    marginTop: 4,\n                    marginBottom: 4,\n                    paddingTop: 4,\n                    paddingBottom: 4,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    userSelect: \"none\"\n                  }\n            }\n            key={i}\n          >\n            <div>{seq.text}</div>\n            {seq.label && (\n              <div\n                onClick={() => {\n                  onSequenceChange(\n                    sequence\n                      .flatMap(s => (s !== seq ? s : stringToSequence(s.text)))\n                      .filter(s => s.text.length > 0)\n                  )\n                }}\n                style={{\n                  display: \"inline-flex\",\n                  cursor: \"pointer\",\n                  alignSelf: \"center\",\n                  fontSize: 11,\n                  width: 18,\n                  height: 18,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginLeft: 4,\n                  borderRadius: 9,\n                  color: \"#fff\",\n                  backgroundColor: \"rgba(0,0,0,0.2)\"\n                }}\n              >\n                <span>{\"\\u2716\"}</span>\n              </div>\n            )}\n          </span>\n        </>\n      ))}\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport type { Label as LabelType } from \"../../types.js\"\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\"\nimport classnames from \"classnames\"\nimport makeStyles from \"@material-ui/styles/makeStyles\"\n\nconst useStyles = makeStyles({\n  label: {\n    display: \"inline-flex\",\n    cursor: \"pointer\",\n    padding: 8,\n    paddingLeft: 12,\n    paddingRight: 12,\n    margin: 4,\n    borderRadius: 4,\n    fontSize: 18,\n    color: \"#fff\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      opacity: 0.6\n    },\n    \"&.small\": {\n      fontSize: 12,\n      fontWeight: \"bold\"\n    }\n  }\n})\n\nconst Label = (props: {\n  ...$Exact<LabelType>,\n  hasChildren?: boolean,\n  small?: boolean,\n  hotkey?: string,\n  deletable?: boolean,\n  onClick: string => any\n}) => {\n  const {\n    parent,\n    color,\n    displayName,\n    description,\n    id,\n    small,\n    hasChildren,\n    hotkey,\n    deletable\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div\n      onClick={() => props.onClick(id)}\n      className={classnames(classes.label, small && \"small\")}\n      style={{ backgroundColor: color }}\n    >\n      {hasChildren && (\n        <FolderOpenIcon\n          style={{\n            width: small ? 12 : 20,\n            height: small ? 12 : 20,\n            marginRight: small ? 3 : 6\n          }}\n        />\n      )}\n      <div>{displayName || id}</div>\n      {hotkey && <div style={{ paddingLeft: 4 }}>({hotkey})</div>}\n      {deletable && (\n        <div\n          style={{\n            display: \"inline-flex\",\n            cursor: \"pointer\",\n            alignSelf: \"center\",\n            fontSize: 11,\n            width: 18,\n            height: 18,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginLeft: 4,\n            borderRadius: 9,\n            color: \"#fff\",\n            backgroundColor: \"rgba(0,0,0,0.2)\"\n          }}\n        >\n          <span>{\"\\u2716\"}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Label\n","// @flow\n\nimport React, { useState, useLayoutEffect, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport type { Label as LabelType } from \"../../types.js\"\nimport LabelButton from \"../LabelButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nconst useStyles = makeStyles({\n  tooltip: {\n    width: 100\n  }\n})\n\nconst findRouteFromParents = (labelId, labels) => {\n  if (!labelId) return []\n  const label = labels.find(l => (l.id || \"root\") === labelId) || {}\n  if (label) {\n    return findRouteFromParents(label.parent, labels).concat([labelId])\n  }\n  return [labelId]\n}\n\nexport default ({\n  labels,\n  onSelectLabel\n}: {\n  labels: Array<LabelType>,\n  onSelectLabel: string => any\n}) => {\n  const [parents, changeParents] = useState([])\n  const currentParent =\n    parents.length > 0 ? parents[parents.length - 1] : undefined\n\n  const hotkeyLabelMap = { r: \"root\" }\n  const labelHotkeyMap = { root: \"r\" }\n  for (let i = 0; i < labels.length; i++) {\n    const label = labels[i]\n    const letters = (label.displayName || label.id).toLowerCase().split(\"\")\n    for (const letter of letters) {\n      if (!hotkeyLabelMap[letter]) {\n        hotkeyLabelMap[letter] = label.id\n        labelHotkeyMap[label.id] = letter\n        break\n      }\n    }\n  }\n\n  useLayoutEffect(() => {\n    const eventFunc = e => {\n      if (hotkeyLabelMap[e.key]) {\n        const labelId = hotkeyLabelMap[e.key]\n        if (!labels.some(l2 => l2.parent === labelId)) {\n          if (labelId === \"root\") {\n            changeParents([])\n          } else {\n            onSelectLabel(labelId)\n          }\n        } else {\n          changeParents(findRouteFromParents(labelId, labels))\n        }\n      }\n    }\n\n    window.addEventListener(\"keydown\", eventFunc)\n    return () => {\n      window.removeEventListener(\"keydown\", eventFunc)\n    }\n  })\n\n  const [helpOpen, changeHelpOpen] = useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      changeHelpOpen(false)\n    }, 500)\n  }, [])\n\n  const c = useStyles()\n\n  return (\n    <div style={{ flexDirection: \"row\", display: \"flex\" }}>\n      <div>\n        <LabelButton\n          color={helpOpen ? \"#888\" : \"#ccc\"}\n          displayName=\"?\"\n          id=\"\"\n          onClick={() => changeHelpOpen(!helpOpen)}\n        />\n      </div>\n      <div>\n        {labels.some(l => l.parent) && (\n          <div style={{ alignItems: \"center\", display: \"flex\" }}>\n            <LabelButton\n              small\n              color={parents.length > 0 ? \"#333\" : \"#ccc\"}\n              displayName=\"Root (r)\"\n              id=\"\"\n              onClick={() => changeParents([])}\n            />\n            {parents\n              .map(p => labels.find(l => l.id === p))\n              .filter(Boolean)\n              .map(l => ({\n                ...l,\n                hasChildren: labels.some(l2 => l2.parent === l.id)\n              }))\n              .map((l, i) => (\n                <Tooltip\n                  open={helpOpen}\n                  classes={{ tooltip: c.tooltip }}\n                  key={i}\n                  title={l.description || \"No Description\"}\n                  placement=\"bottom\"\n                >\n                  <LabelButton\n                    small\n                    {...l}\n                    hotkey={labelHotkeyMap[l.id]}\n                    onClick={() => {\n                      changeParents(parents.slice(0, parents.indexOf(l.id) + 1))\n                    }}\n                  />\n                </Tooltip>\n              ))}\n          </div>\n        )}\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {labels\n            .filter(l => l.parent === currentParent)\n            .map(l => ({\n              ...l,\n              hasChildren: labels.some(l2 => l2.parent === l.id)\n            }))\n            .map((l, i) => (\n              <Tooltip\n                open={helpOpen}\n                classes={{ tooltip: c.tooltip }}\n                key={i}\n                title={l.description || \"No Description\"}\n                placement=\"bottom\"\n              >\n                <LabelButton\n                  {...l}\n                  hotkey={labelHotkeyMap[l.id]}\n                  onClick={\n                    !l.hasChildren\n                      ? onSelectLabel\n                      : () => {\n                          changeParents(parents.concat([l.id]))\n                        }\n                  }\n                />\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nconst mergeSequence = (\n  seq: Array<{ text: string, label?: string, color?: string }>\n) => {\n  const newSeq = []\n  let current = [seq[0]]\n  for (let i = 1; i < seq.length; i++) {\n    if (current[0].label === seq[i].label) {\n      current.push(seq[i])\n    } else {\n      newSeq.push({\n        label: current[0].label,\n        text: current.reduce((acc, c) => acc + c.text, \"\")\n      })\n      current = [seq[i]]\n    }\n  }\n  newSeq.push({\n    label: current[0].label,\n    text: current.reduce((acc, c) => acc + c.text, \"\")\n  })\n  return newSeq\n}\n\nexport default mergeSequence\n","// @flow\n\nimport * as colors from \"@material-ui/core/colors\"\n\nexport default Object.keys(colors)\n  .filter(c => c !== \"common\")\n  .map(c => colors[c][700])\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\n\nimport type { SequenceAnnotatorProps } from \"../../types\"\nimport Document from \"../Document\"\nimport LabelSelector from \"../LabelSelector\"\nimport stringToSequence from \"../../string-to-sequence.js\"\nimport mergeSequence from \"../../merge-sequence.js\"\nimport colors from \"../../colors\"\n\nexport default function SequenceAnnotator(props: SequenceAnnotatorProps) {\n  const [highlightedItems, changeHighlightedItems] = useState([])\n  const [sequence, changeSequence] = useState(\n    () => props.initialSequence || stringToSequence(props.document)\n  )\n  const colorLabelMap = useMemo(\n    () =>\n      props.labels.reduce(\n        (acc, l, i) => ((acc[l.id] = colors[i % colors.length]), acc),\n        {}\n      ),\n    [props.labels]\n  )\n\n  return (\n    <div>\n      <div>\n        <LabelSelector\n          labels={props.labels}\n          onSelectLabel={(label: string) => {\n            const { color } = props.labels.find(({ id }) => label === id) || {}\n            let buildText = \"\"\n            const newSequence = []\n            for (let itemIndex = 0; itemIndex < sequence.length; itemIndex++) {\n              const item = sequence[itemIndex]\n              if (!highlightedItems.includes(itemIndex) || item.label) {\n                if (buildText.length > 0) {\n                  newSequence.push({\n                    text: buildText,\n                    color,\n                    label\n                  })\n                  buildText = \"\"\n                }\n                newSequence.push(item)\n              } else {\n                buildText += item.text\n              }\n            }\n            if (buildText.length > 0) {\n              newSequence.push({\n                text: buildText,\n                color,\n                label\n              })\n            }\n\n            changeSequence(newSequence)\n            props.onChange(mergeSequence(newSequence))\n            changeHighlightedItems([])\n          }}\n        />\n      </div>\n      <div style={{ borderTop: \"1px solid #ccc\", marginTop: 8, paddingTop: 5 }}>\n        <Document\n          colorLabelMap={colorLabelMap}\n          nothingHighlighted={highlightedItems.length === 0}\n          onHighlightedChanged={highlightedItems =>\n            changeHighlightedItems(highlightedItems)\n          }\n          onSequenceChange={sequence => {\n            changeSequence(sequence)\n            props.onChange(mergeSequence(sequence))\n          }}\n          sequence={sequence}\n        />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\n\nimport type { LabelDocumentProps } from \"../../types\"\nimport Document from \"../Document\"\nimport LabelSelector from \"../LabelSelector\"\nimport stringToSequence from \"../../string-to-sequence.js\"\nimport LabelButton from \"../LabelButton\"\n\nexport default function DocumentLabeler(props: LabelDocumentProps) {\n  const [selectedLabels, changeSelectedLabels] = useState([])\n  const sequence = useMemo(() => stringToSequence(props.document), [\n    props.document\n  ])\n  return (\n    <div>\n      <div>\n        <LabelSelector\n          labels={props.labels}\n          onSelectLabel={(labelId: string) => {\n            if (props.multipleLabels) {\n              changeSelectedLabels(selectedLabels.concat([labelId]))\n              props.onChange(selectedLabels.concat([labelId]))\n            } else {\n              props.onChange(labelId)\n              changeSelectedLabels([labelId])\n            }\n          }}\n        />\n      </div>\n      <div style={{ borderTop: \"1px solid #ccc\", marginTop: 8, paddingTop: 5 }}>\n        <div>\n          {selectedLabels.map(labelId => {\n            const label = props.labels.find(l => l.id === labelId)\n            if (!label) return\n            return (\n              <LabelButton\n                {...label}\n                small\n                deletable\n                onClick={(labelId: string) => {\n                  const newSelectedLabels = selectedLabels.filter(\n                    l => l !== labelId\n                  )\n                  changeSelectedLabels(newSelectedLabels)\n                  if (props.multipleLabels) {\n                    props.onChange(newSelectedLabels)\n                  } else {\n                    props.onChange(null)\n                  }\n                }}\n              />\n            )\n          })}\n        </div>\n        <Document nothingHighlighted sequence={sequence} />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport CreatableSelect from \"react-select/lib/AsyncCreatable\"\nimport Spelling from \"spelling\"\nimport enDictionary from \"spelling/dictionaries/en_US\"\nimport chroma from \"chroma-js\"\nimport { green, yellow, red } from \"@material-ui/core/colors\"\n\nconst spellChecker = new Spelling(enDictionary)\n\nconst components = {}\nconst createOption = (label, color) => ({\n  label,\n  value: label + Math.random().toString(),\n  color\n})\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: \"white\" }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color || yellow[700])\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : color.alpha(0.05).css(),\n      color: isDisabled\n        ? \"#ccc\"\n        : isSelected\n        ? chroma.contrast(color, \"white\") > 2\n          ? \"white\"\n          : \"black\"\n        : color\n            .darken()\n            .darken()\n            .css(),\n      cursor: isDisabled ? \"not-allowed\" : \"default\"\n    }\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css()\n    }\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: chroma(data.color)\n      .darken()\n      .darken()\n      .css()\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: chroma(data.color)\n      .darken()\n      .darken()\n      .css(),\n    \":hover\": {\n      backgroundColor: data.color,\n      color: \"white\"\n    }\n  })\n}\n\nexport default function EditableDocument({\n  initialText = \"\",\n  onChange,\n  phraseBank = [],\n  validator = () => []\n}: {\n  initialText?: string,\n  validator?: string => Array<string>,\n  onChange: string => any,\n  phraseBank?: Array<string>\n}) {\n  const [inputValue, changeInputValue] = useState()\n  const [value, changeValue] = useState(\n    initialText\n      ? [{ value: initialText, label: initialText, color: green[500] }]\n      : []\n  )\n  const [validationErrors, changeValidationErrors] = useState([])\n\n  const handleChange = v => {\n    changeValue(v)\n    const result = v.map(l => l.label).join(\" \")\n    try {\n      changeValidationErrors(validator(result))\n    } catch (e) {\n      changeValidationErrors([\"Error: Validator had error: \" + e.toString()])\n    }\n    onChange(result)\n  }\n  const handleInputChange = v => changeInputValue(v)\n  const handleKeyDown = ({ key }) => {\n    if (!inputValue) return\n    if (key === \"Enter\" || key === \"Tab\") {\n      changeValue([...value, createOption(inputValue + \" \", yellow[700])])\n      changeInputValue(\"\")\n    }\n  }\n\n  const loadOptions = async text => {\n    let bestOption\n    text = text.toLowerCase()\n    const scRes = spellChecker.lookup(text)\n    if (scRes.found || phraseBank.includes(text))\n      return [createOption(text, green[500])]\n\n    const possiblePhrases = phraseBank.filter(p => p.startsWith(text))\n    return [bestOption || createOption(text, yellow[700])]\n      .concat(\n        possiblePhrases\n          .filter(p => p !== text)\n          .map(p => createOption(p, green[500]))\n      )\n      .concat(\n        scRes.suggestions\n          .slice(0, 6)\n          .map(({ word }) => createOption(word, green[500]))\n      )\n  }\n\n  return (\n    <div style={{ fontSize: 18 }}>\n      <CreatableSelect\n        components={components}\n        inputValue={inputValue}\n        isClearable\n        isMulti\n        onChange={handleChange}\n        onInputChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Begin writing...\"\n        loadOptions={loadOptions}\n        value={value}\n        styles={colourStyles}\n      />\n      <div\n        style={{\n          fontSize: 14,\n          height: 100,\n          marginTop: 8,\n          borderRadius: 2,\n          padding: 8\n        }}\n      >\n        {validationErrors.map(v => (\n          <div\n            style={{\n              marginTop: 8,\n              color: v.toLowerCase().includes(\"error:\") ? red[800] : yellow[800]\n            }}\n          >\n            {v}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport EditableDocument from \"../EditableDocument\"\nimport type { TranscriberProps } from \"../../types\"\n\nexport default ({\n  initialTranscriptionText,\n  onChange,\n  audio,\n  phraseBank: phraseBankParam,\n  validator\n}: TranscriberProps) => {\n  const [autoPlayStatus, changeAutoPlayStatus] = useState(\n    window.localStorage.NLP_ANNOTATOR_AUTOPLAY === \"true\"\n  )\n  // TODO create hook for usePhraseBank\n  const [phraseBank, changePhraseBank] = useState(undefined)\n  useEffect(() => {\n    async function loadPhraseBank() {\n      if (typeof phraseBankParam === \"string\") {\n        phraseBankParam = [phraseBankParam]\n      }\n      if (\n        Array.isArray(phraseBankParam) &&\n        phraseBankParam.every(\n          p =>\n            p.startsWith(\"http\") && (p.endsWith(\".txt\") || p.endsWith(\".csv\"))\n        )\n      ) {\n        const fullPhraseBank = []\n        for (const url of phraseBankParam) {\n          let found\n          const saveName = `NLP_ANNOTATOR_PHRASE_BANK_${url}`\n          if (window.localStorage[saveName]) {\n            try {\n              fullPhraseBank.push(...JSON.parse(window.localStorage[saveName]))\n              found = true\n            } catch (e) {}\n          }\n          if (!found) {\n            const urlPhrases = (await fetch(url).then(res => res.text()))\n              .split(\"\\n\")\n              .map(a => a.trim().toLowerCase())\n            window.localStorage[saveName] = JSON.stringify(urlPhrases)\n            fullPhraseBank.push(...urlPhrases)\n          }\n        }\n        changePhraseBank(fullPhraseBank)\n      } else if (Array.isArray(phraseBankParam)) {\n        changePhraseBank(phraseBankParam)\n      }\n    }\n    loadPhraseBank()\n    return () => {}\n  }, [phraseBankParam])\n\n  return (\n    <div>\n      <div style={{ textAlign: \"center\", padding: 10 }}>\n        <audio\n          autoPlay={autoPlayStatus}\n          loop\n          controlsList=\"nodownload\"\n          controls\n        >\n          <source src={audio} />\n        </audio>\n        <span style={{ fontSize: 12 }}>\n          Autoplay:{\" \"}\n          <input\n            checked={autoPlayStatus}\n            type=\"checkbox\"\n            onChange={() => {\n              window.localStorage.NLP_ANNOTATOR_AUTOPLAY = JSON.stringify(\n                window.localStorage.NLP_ANNOTATOR_AUTOPLAY !== \"true\"\n              )\n              changeAutoPlayStatus(\n                JSON.parse(window.localStorage.NLP_ANNOTATOR_AUTOPLAY)\n              )\n            }}\n          />\n        </span>\n      </div>\n      <div style={{ padding: 10 }}>\n        <EditableDocument\n          phraseBank={phraseBank}\n          validator={validator}\n          onChange={onChange}\n          initialText={initialTranscriptionText}\n        />\n      </div>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\n\nexport default ({ children }: any) => (\n  <div style={{ border: \"1px solid #ccc\", padding: 10, borderRadius: 4 }}>\n    {children}\n  </div>\n)\n","// @flow\n\nimport React, { useState, useLayoutEffect } from \"react\"\n\nimport type { NLPAnnotatorProps } from \"../../types\"\nimport SequenceAnnotator from \"../SequenceAnnotator\"\nimport DocumentLabeler from \"../DocumentLabeler\"\nimport Transcriber from \"../Transcriber\"\nimport colors from \"../../colors\"\nimport { green } from \"@material-ui/core/colors\"\nimport makeStyles from \"@material-ui/styles/makeStyles\"\nimport Container from \"../Container\"\nimport Button from \"@material-ui/core/Button\"\n\nconst useStyles = makeStyles({\n  finishButton: {\n    \"&&\": {\n      fontSize: 14,\n      textTransform: \"none\",\n      backgroundColor: green[500],\n      padding: 10,\n      color: \"#fff\",\n      margin: 10,\n      fontWeight: \"bold\",\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    }\n  }\n})\n\nexport default function NLPAnnotator(props: NLPAnnotatorProps) {\n  const classes = useStyles()\n  let [output, changeOutput] = useState(null)\n\n  useLayoutEffect(() => {\n    const eventFunc = e => {\n      if (e.key === \"Enter\") {\n        if (props.onFinish) props.onFinish(output)\n      }\n    }\n    window.addEventListener(\"keydown\", eventFunc)\n    return () => {\n      window.removeEventListener(\"keydown\", eventFunc)\n    }\n  })\n\n  const onChange = (newOutput: any) => {\n    if (props.onChange) props.onChange(newOutput)\n    changeOutput(newOutput)\n  }\n  if (props.labels && (props: any).labels.some(l => !l.color)) {\n    props = ({\n      ...props,\n      labels: (props: any).labels.map((l, i) => ({\n        color: colors[i % colors.length],\n        ...l\n      }))\n    }: any)\n  }\n  let finishButton = null\n  if (props.onFinish) {\n    if (output === null && props.type === \"transcribe\") {\n      output = props.initialTranscriptionText\n    }\n    if (output === null && props.type === \"label-sequence\") {\n      output = []\n    }\n    finishButton = (\n      <Button\n        disabled={\n          props.validator &&\n          (props: any)\n            .validator(output)\n            .some(msg => msg.toLowerCase().includes(\"error:\"))\n        }\n        onClick={() => {\n          props.onFinish(output)\n        }}\n        className={classes.finishButton}\n      >\n        Complete (enter)\n      </Button>\n    )\n  }\n  if (props.type === \"label-sequence\") {\n    return (\n      <Container>\n        <SequenceAnnotator {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  if (props.type === \"label-document\") {\n    return (\n      <Container>\n        <DocumentLabeler {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  if (props.type === \"transcribe\") {\n    return (\n      <Container>\n        <Transcriber {...props} onChange={onChange} />\n        <div style={{ textAlign: \"right\" }}>{finishButton}</div>\n      </Container>\n    )\n  }\n  return null\n}\n","// @flow\n\nimport React, { Component } from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport Button from \"@material-ui/core/Button\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\n\nexport default class ErrorBoundaryDialog extends Component {\n  state = { hasError: false, err: \"\" }\n  componentDidCatch(err, info) {\n    this.setState({\n      hasError: true,\n      err: err.toString() + \"\\n\\n\" + info.componentStack\n    })\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Dialog open={this.state.hasError} onClose={this.props.onClose}>\n          <DialogTitle>Error Loading Annotator</DialogTitle>\n          <DialogContent>\n            <pre>{this.state.err}</pre>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.onClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      )\n    }\n    return this.props.children\n  }\n}\n","// @flow\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Theme from \"./components/Theme\"\nimport DemoSite from \"./components/DemoSite\"\n\nReactDOM.render(\n  <Theme>\n    <DemoSite />\n  </Theme>,\n  document.getElementById(\"root\")\n)\n","// @flow\nimport React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Editor, { examples } from \"./Editor\"\nimport NLPAnnotator from \"../NLPAnnotator\"\nimport ErrorBoundaryDialog from \"./ErrorBoundaryDialog.js\"\n\nexport default () => {\n  const [annotatorOpen, changeAnnotatorOpen] = useState(false)\n  const [annotatorProps, changeAnnotatorProps] = useState(examples[\"Custom\"]())\n  const [lastOutput, changeLastOutput] = useState()\n\n  return (\n    <div>\n      {annotatorOpen ? (\n        <ErrorBoundaryDialog\n          onClose={() => {\n            changeAnnotatorOpen(false)\n          }}\n        >\n          <NLPAnnotator\n            {...(annotatorProps: any)}\n            onFinish={output => {\n              changeLastOutput(output)\n              changeAnnotatorOpen(false)\n            }}\n          />\n        </ErrorBoundaryDialog>\n      ) : (\n        <Editor\n          lastOutput={lastOutput}\n          onOpenAnnotator={props => {\n            changeAnnotatorProps(props)\n            changeAnnotatorOpen(true)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}